{"ast":null,"code":"var _jsxFileName = \"/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/App.js\";\nimport React from 'react';\nimport { ApolloClient, InMemoryCache } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { createHttpLink } from 'apollo-link-http';\nimport Title from './components/layout/Title';\nimport { Layout } from 'antd';\nimport AddArtist from './components/forms/AddArtist';\nimport AddInstrument from './components/forms/AddInstrument';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ARTISTS } from './queries';\nimport './App.css';\nimport Artists from './components/lists/Artists';\nconst {\n  Content\n} = Layout;\nconst client = new ApolloClient({\n  link: createHttpLink({\n    uri: 'http://localhost:4000/graphql'\n  }),\n  cache: new InMemoryCache()\n});\n\nconst App = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ARTISTS);\n  if (loading) return 'Loading...';\n  if (error) return `Errror! ${error.message}`;\n  return /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Content, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AddArtist, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), data.artists ? /*#__PURE__*/React.createElement(AddInstrument, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Artists, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/App.js"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","Title","Layout","AddArtist","AddInstrument","useQuery","GET_ARTISTS","Artists","Content","client","link","uri","cache","App","loading","error","data","message","artists"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,cAA5C;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,4BAApB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcN,MAApB;AAEA,MAAMO,MAAM,GAAG,IAAIZ,YAAJ,CAAiB;AAC9Ba,EAAAA,IAAI,EAAEV,cAAc,CAAC;AAAEW,IAAAA,GAAG,EAAE;AAAP,GAAD,CADU;AAE9BC,EAAAA,KAAK,EAAE,IAAId,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,MAAMe,GAAG,GAAG,MAAM;AAChB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BX,QAAQ,CAACC,WAAD,CAAzC;AACA,MAAIQ,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,WAAUA,KAAK,CAACE,OAAQ,EAAhC;AAEX,sBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAER,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGO,IAAI,CAACE,OAAL,gBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANN,eASE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF,CADF;AAiBD,CAtBD;;AA0BA,eAAeL,GAAf","sourcesContent":["import React from 'react'\n\nimport { ApolloClient, InMemoryCache } from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { createHttpLink } from 'apollo-link-http'\nimport Title from './components/layout/Title'\n\nimport { Layout } from 'antd'\nimport AddArtist from './components/forms/AddArtist'\nimport AddInstrument from './components/forms/AddInstrument'\nimport { useQuery } from '@apollo/react-hooks'\nimport { GET_ARTISTS } from './queries'\n\nimport './App.css'\nimport Artists from './components/lists/Artists'\n\nconst { Content } = Layout\n\nconst client = new ApolloClient({\n  link: createHttpLink({ uri: 'http://localhost:4000/graphql' }),\n  cache: new InMemoryCache()\n})\n\nconst App = () => {\n  const { loading, error, data } = useQuery(GET_ARTISTS)\n  if (loading) return 'Loading...'\n  if (error) return `Errror! ${error.message}`\n\n  return (\n    <ApolloProvider client={client}>\n      <div className='container'>\n        <Content className='App'>\n          <Title />\n          <AddArtist />\n          {data.artists ? (\n            <AddInstrument />\n          ) : (\n              <div></div>\n            )}\n\n          <Artists />\n        </Content>\n      </div>\n    </ApolloProvider>\n  )\n}\n\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}