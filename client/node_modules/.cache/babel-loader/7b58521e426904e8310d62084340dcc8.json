{"ast":null,"code":"var _jsxFileName = \"/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/buttons/RemoveArtist.js\";\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useQuery } from '@apollo/react-hooks';\nimport { filter } from 'lodash';\nimport { GET_ARTISTS, REMOVE_ARTIST, REMOVE_INSTRUMENT, GET_ARTISTSINSTRUMENTS } from '../../queries';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst RemoveArtist = ({\n  id,\n  firstName,\n  lastName\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ARTISTSINSTRUMENTS, {\n    variables: {\n      artistId: id\n    }\n  });\n  const [removeArtist] = useMutation(REMOVE_ARTIST, {\n    update(proxy, {\n      data: {\n        removeArtist\n      }\n    }) {\n      const {\n        artists\n      } = proxy.readQuery({\n        query: GET_ARTISTS\n      });\n      proxy.writeQuery({\n        query: GET_ARTISTS,\n        data: {\n          artists: filter(artists, c => {\n            return c.id !== removeArtist.id;\n          })\n        }\n      });\n    }\n\n  });\n  const [removeInstrument] = useMutation(REMOVE_INSTRUMENT, {\n    update(proxy, {\n      data: {\n        removeInstrument\n      }\n    }) {\n      const {\n        instruments\n      } = proxy.readQuery({\n        query: GET_ARTISTSINSTRUMENTS,\n        variables: {\n          artistId: id\n        }\n      });\n      proxy.writeQuery({\n        query: GET_ARTISTSINSTRUMENTS,\n        variables: {\n          artistId: id\n        },\n        data: {\n          getInstruments: filter(instruments, c => {\n            return c.id !== removeInstrument.id;\n          })\n        }\n      });\n    }\n\n  });\n\n  const handleButtonClick = () => {\n    let result = window.confirm('Are you sure you want to delete this artist?');\n\n    if (result) {\n      removeArtist({\n        variables: {\n          id\n        },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          removeArtist: {\n            __typename: 'Artist',\n            id,\n            firstName,\n            lastName\n          }\n        }\n      }), data.instruments.map((id, year, brand, type, price, artistId) => {\n        removeInstrument({\n          variables: {\n            id\n          },\n          optimisticResponse: {\n            __typename: 'Mutation',\n            removeInstrument: {\n              __typename: 'Instrument',\n              id,\n              year,\n              brand,\n              type,\n              price,\n              artistId\n            }\n          }\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DeleteOutlined, {\n    key: \"delete\",\n    onClick: handleButtonClick,\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default RemoveArtist;","map":{"version":3,"sources":["/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/buttons/RemoveArtist.js"],"names":["React","useMutation","useQuery","filter","GET_ARTISTS","REMOVE_ARTIST","REMOVE_INSTRUMENT","GET_ARTISTSINSTRUMENTS","DeleteOutlined","RemoveArtist","id","firstName","lastName","loading","error","data","variables","artistId","removeArtist","update","proxy","artists","readQuery","query","writeQuery","c","removeInstrument","instruments","getInstruments","handleButtonClick","result","window","confirm","optimisticResponse","__typename","map","year","brand","type","price","color"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { useQuery } from '@apollo/react-hooks'\nimport { filter } from 'lodash'\nimport { GET_ARTISTS, REMOVE_ARTIST, REMOVE_INSTRUMENT, GET_ARTISTSINSTRUMENTS } from '../../queries'\nimport { DeleteOutlined } from '@ant-design/icons'\n\nconst RemoveArtist = ({ id, firstName, lastName }) => {\n  const { loading, error, data } = useQuery(GET_ARTISTSINSTRUMENTS, {\n    variables: { artistId: id },\n  })\n\n  const [removeArtist] = useMutation(REMOVE_ARTIST, {\n    update(proxy, { data: { removeArtist } }) {\n      const { artists } = proxy.readQuery({ query: GET_ARTISTS })\n      proxy.writeQuery({\n        query: GET_ARTISTS,\n        data: {\n          artists: filter(artists, c => {\n            return c.id !== removeArtist.id\n          })\n        }\n      })\n    }\n  })\n\n  const [removeInstrument] = useMutation(REMOVE_INSTRUMENT, {\n    update(proxy, { data: { removeInstrument } }) {\n      const { instruments } = proxy.readQuery({\n        query: GET_ARTISTSINSTRUMENTS,\n        variables: { artistId: id }\n      })\n      proxy.writeQuery({\n        query: GET_ARTISTSINSTRUMENTS,\n        variables: { artistId: id },\n        data: {\n          getInstruments: filter(instruments, c => {\n            return c.id !== removeInstrument.id\n          })\n        }\n      })\n    }\n  })\n\n  const handleButtonClick = () => {\n    let result = window.confirm('Are you sure you want to delete this artist?')\n    if (result) {\n      removeArtist({\n        variables: {\n          id\n        },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          removeArtist: {\n            __typename: 'Artist',\n            id,\n            firstName,\n            lastName\n          }\n        }\n      }),\n        data.instruments.map((id, year, brand, type, price, artistId) => {\n          removeInstrument({\n            variables: {\n              id\n            },\n            optimisticResponse: {\n              __typename: 'Mutation',\n              removeInstrument: {\n                __typename: 'Instrument',\n                id,\n                year,\n                brand,\n                type,\n                price,\n                artistId\n              }\n            }\n          })\n        })\n    }\n  }\n  return (\n    <DeleteOutlined\n      key='delete'\n      onClick={handleButtonClick}\n      style={{ color: 'red' }}\n    />\n  )\n}\n\nexport default RemoveArtist\n"]},"metadata":{},"sourceType":"module"}