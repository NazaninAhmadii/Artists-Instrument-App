{"ast":null,"code":"var _jsxFileName = \"/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/forms/UpdateInstrument.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Form, Input, Button } from 'antd';\nimport { UPDATE_ARTIST } from '../../queries';\n\nconst UpdateInstrument = props => {\n  const [id] = useState(props.id);\n  const [firstName, setFirstName] = useState(props.firstName);\n  const [lastName, setLastName] = useState(props.lastName);\n  const [updateArtist] = useMutation(UPDATE_ARTIST);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState();\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const {\n      firstName,\n      lastName\n    } = values;\n    updateArtist({\n      variables: {\n        id,\n        firstName,\n        lastName\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updateArtist: {\n          __typename: 'Artist',\n          id,\n          firstName,\n          lastName\n        }\n      }\n    });\n    props.onButtonClick();\n  };\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case 'firstName':\n        props.updateStateVariable('firstName', value);\n        setFirstName(value);\n        break;\n\n      case 'lastName':\n        props.updateStateVariable('lastName', value);\n        setLastName(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"update-artist-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    initialValues: {\n      firstName: firstName,\n      lastName: lastName\n    },\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"firstName\",\n    label: \"First Name\",\n    rules: [{\n      required: true,\n      message: 'Please input your first name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. John\",\n    onChange: e => updateStateVariable('firstName', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    rules: [{\n      required: true,\n      message: 'Please input your last name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Smith\",\n    onChange: e => updateStateVariable('lastName', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    shouldUpdate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, () => /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n      errors\n    }) => errors.length).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Update Artist\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"Cancel\"));\n};\n\nexport default UpdateInstrument;","map":{"version":3,"sources":["/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/forms/UpdateInstrument.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","UPDATE_ARTIST","UpdateInstrument","props","id","firstName","setFirstName","lastName","setLastName","updateArtist","form","useForm","forceUpdate","onFinish","values","variables","optimisticResponse","__typename","onButtonClick","updateStateVariable","variable","value","required","message","e","target","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { Form, Input, Button } from 'antd'\nimport { UPDATE_ARTIST } from '../../queries'\n\nconst UpdateInstrument = props => {\n    const [id] = useState(props.id)\n    const [firstName, setFirstName] = useState(props.firstName)\n    const [lastName, setLastName] = useState(props.lastName)\n    const [updateArtist] = useMutation(UPDATE_ARTIST)\n\n    const [form] = Form.useForm()\n    const [, forceUpdate] = useState()\n\n    useEffect(() => {\n        forceUpdate({})\n    }, [])\n\n    const onFinish = values => {\n        const { firstName, lastName } = values\n        updateArtist({\n            variables: {\n                id,\n                firstName,\n                lastName\n            },\n            optimisticResponse: {\n                __typename: 'Mutation',\n                updateArtist: {\n                    __typename: 'Artist',\n                    id,\n                    firstName,\n                    lastName\n                }\n            }\n        })\n        props.onButtonClick()\n    }\n\n    const updateStateVariable = (variable, value) => {\n        switch (variable) {\n            case 'firstName':\n                props.updateStateVariable('firstName', value)\n                setFirstName(value)\n                break\n            case 'lastName':\n                props.updateStateVariable('lastName', value)\n                setLastName(value)\n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <Form\n            form={form}\n            name='update-artist-form'\n            layout='inline'\n            onFinish={onFinish}\n            initialValues={{\n                firstName: firstName,\n                lastName: lastName\n            }}\n            size='large'\n        >\n            <Form.Item\n                name='firstName'\n                label='First Name'\n                rules={[{ required: true, message: 'Please input your first name!' }]}\n            >\n                <Input\n                    placeholder='i.e. John'\n                    onChange={e => updateStateVariable('firstName', e.target.value)}\n                />\n            </Form.Item>\n            <Form.Item\n                name='lastName'\n                label='Last Name'\n                rules={[{ required: true, message: 'Please input your last name!' }]}\n            >\n                <Input\n                    placeholder='i.e. Smith'\n                    onChange={e => updateStateVariable('lastName', e.target.value)}\n                />\n            </Form.Item>\n            <Form.Item shouldUpdate={true}>\n                {() => (\n                    <Button\n                        type='primary'\n                        htmlType='submit'\n                        disabled={\n                            !form.isFieldsTouched(true) ||\n                            form.getFieldsError().filter(({ errors }) => errors.length).length\n                        }\n                    >\n                        Update Artist\n                    </Button>\n                )}\n            </Form.Item>\n            <Button onClick={props.onButtonClick}>Cancel</Button>\n        </Form>\n    )\n}\n\nexport default UpdateInstrument\n"]},"metadata":{},"sourceType":"module"}