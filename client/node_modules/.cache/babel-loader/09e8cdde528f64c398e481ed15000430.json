{"ast":null,"code":"var _jsxFileName = \"/Users/nano3labs/Documents/artists-instruments-boilerplate-antd/client/src/components/forms/UpdateArtist.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Form, Input, Button } from 'antd';\nimport { UPDATE_ARTIST } from '../../queries';\n\nconst UpdateArtist = props => {\n  const [id] = useState(props.id);\n  const [firstName, setFirstName] = useState(props.firstName);\n  const [lastName, setLastName] = useState(props.lastName);\n  const [updateArtist] = useMutation(UPDATE_ARTIST);\n  console.log(firstName, lastName);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState();\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const {\n      firstName,\n      lastName\n    } = values;\n    updateArtist({\n      variables: {\n        id,\n        firstName,\n        lastName\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updateArtist: {\n          __typename: 'Artist',\n          id,\n          firstName,\n          lastName\n        }\n      }\n    });\n    props.onButtonClick();\n  };\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case 'firstName':\n        props.updateStateVariable(('firstName', value));\n        setFirstName(value);\n        break;\n\n      case 'lastName':\n        props.updateStateVariable(('firstName', value));\n        setLastName(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"update-artist-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    initialValues: {\n      firstName: firstName,\n      lastName: lastName\n    },\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"firstName\",\n    label: \"First Name\",\n    rules: [{\n      required: true,\n      message: 'Please input your first name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. John\",\n    onChange: e => updateStateVariable('firstName', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    rules: [{\n      required: true,\n      message: 'Please input your last name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Smith\",\n    onChange: e => updateStateVariable('lastName', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    shouldUpdate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, () => /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n      errors\n    }) => errors.length).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Update Artist\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"Cancel\"));\n};\n\nexport default UpdateArtist;","map":{"version":3,"sources":["/Users/nano3labs/Documents/artists-instruments-boilerplate-antd/client/src/components/forms/UpdateArtist.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","UPDATE_ARTIST","UpdateArtist","props","id","firstName","setFirstName","lastName","setLastName","updateArtist","console","log","form","useForm","forceUpdate","onFinish","values","variables","optimisticResponse","__typename","onButtonClick","updateStateVariable","variable","value","required","message","e","target","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { Form, Input, Button } from 'antd'\nimport { UPDATE_ARTIST } from '../../queries'\n\nconst UpdateArtist = props => {\n  const [id] = useState(props.id)\n  const [firstName, setFirstName] = useState(props.firstName)\n  const [lastName, setLastName] = useState(props.lastName)\n  const [updateArtist] = useMutation(UPDATE_ARTIST)\n\n  console.log(firstName, lastName)\n\n  const [form] = Form.useForm()\n  const [, forceUpdate] = useState()\n\n  useEffect(() => {\n    forceUpdate({})\n  }, [])\n\n  const onFinish = values => {\n    const { firstName, lastName } = values\n    updateArtist({\n      variables: {\n        id,\n        firstName,\n        lastName\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updateArtist: {\n          __typename: 'Artist',\n          id,\n          firstName,\n          lastName\n        }\n      }\n    })\n    props.onButtonClick()\n  }\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case 'firstName':\n        props.updateStateVariable(('firstName', value))\n        setFirstName(value)\n        break\n        case 'lastName':\n          props.updateStateVariable(('firstName', value))\n        setLastName(value)\n        break\n      default:\n        break\n    }\n  }\n\n  return (\n    <Form\n      form={form}\n      name='update-artist-form'\n      layout='inline'\n      onFinish={onFinish}\n      initialValues={{\n        firstName: firstName,\n        lastName: lastName\n      }}\n      size='large'\n    >\n      <Form.Item\n        name='firstName'\n        label='First Name'\n        rules={[{ required: true, message: 'Please input your first name!' }]}\n      >\n        <Input\n          placeholder='i.e. John'\n          onChange={e => updateStateVariable('firstName', e.target.value)}\n        />\n      </Form.Item>\n      <Form.Item\n        name='lastName'\n        label='Last Name'\n        rules={[{ required: true, message: 'Please input your last name!' }]}\n      >\n        <Input\n          placeholder='i.e. Smith'\n          onChange={e => updateStateVariable('lastName', e.target.value)}\n        />\n      </Form.Item>\n      <Form.Item shouldUpdate={true}>\n        {() => (\n          <Button\n            type='primary'\n            htmlType='submit'\n            disabled={\n              !form.isFieldsTouched(true) ||\n              form.getFieldsError().filter(({ errors }) => errors.length).length\n            }\n          >\n            Update Artist\n          </Button>\n        )}\n      </Form.Item>\n      <Button onClick={props.onButtonClick}>Cancel</Button>\n    </Form>\n  )\n}\n\nexport default UpdateArtist\n"]},"metadata":{},"sourceType":"module"}