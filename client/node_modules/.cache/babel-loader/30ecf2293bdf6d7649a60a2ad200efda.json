{"ast":null,"code":"var _jsxFileName = \"/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/forms/UpdateInstrument.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Form, Input, Button } from 'antd';\nimport { UPDATE_INSTRUMENT } from '../../queries';\n\nconst UpdateInstrument = props => {\n  const [id] = useState(props.id);\n  const [year, setYear] = useState(props.year);\n  const [brand, setBrand] = useState(props.brand);\n  const [type, setType] = useState(props.type);\n  const [price, setPrice] = useState(props.price);\n  const [artistId, setArtistId] = useState(props.artistId);\n  const [updateInstrument] = useMutation(UPDATE_INSTRUMENT);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState();\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const {\n      firstName,\n      lastName\n    } = values;\n    updateArtist({\n      variables: {\n        id,\n        year,\n        brand,\n        type,\n        price,\n        artistId\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updateInstrument: {\n          __typename: 'Instrument',\n          id,\n          year,\n          brand,\n          type,\n          price,\n          artistId\n        }\n      }\n    });\n    props.onButtonClick();\n  };\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case 'firstName':\n        props.updateStateVariable('firstName', value);\n        setFirstName(value);\n        break;\n\n      case 'lastName':\n        props.updateStateVariable('lastName', value);\n        setLastName(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"update-artist-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    initialValues: {\n      firstName: firstName,\n      lastName: lastName\n    },\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"firstName\",\n    label: \"First Name\",\n    rules: [{\n      required: true,\n      message: 'Please input your first name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. John\",\n    onChange: e => updateStateVariable('firstName', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    rules: [{\n      required: true,\n      message: 'Please input your last name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Smith\",\n    onChange: e => updateStateVariable('lastName', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    shouldUpdate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, () => /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n      errors\n    }) => errors.length).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Update Artist\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Cancel\"));\n};\n\nexport default UpdateInstrument;","map":{"version":3,"sources":["/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/forms/UpdateInstrument.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","UPDATE_INSTRUMENT","UpdateInstrument","props","id","year","setYear","brand","setBrand","type","setType","price","setPrice","artistId","setArtistId","updateInstrument","form","useForm","forceUpdate","onFinish","values","firstName","lastName","updateArtist","variables","optimisticResponse","__typename","onButtonClick","updateStateVariable","variable","value","setFirstName","setLastName","required","message","e","target","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { Form, Input, Button } from 'antd'\nimport { UPDATE_INSTRUMENT } from '../../queries'\n\nconst UpdateInstrument = props => {\n    const [id] = useState(props.id)\n    const [year, setYear] = useState(props.year)\n    const [brand, setBrand] = useState(props.brand)\n    const [type, setType] = useState(props.type)\n    const [price, setPrice] = useState(props.price)\n    const [artistId, setArtistId] = useState(props.artistId)\n    const [updateInstrument] = useMutation(UPDATE_INSTRUMENT)\n\n    const [form] = Form.useForm()\n    const [, forceUpdate] = useState()\n\n    useEffect(() => {\n        forceUpdate({})\n    }, [])\n\n    const onFinish = values => {\n        const { firstName, lastName } = values\n        updateArtist({\n            variables: {\n                id,\n                year,\n                brand,\n                type,\n                price,\n                artistId\n            },\n            optimisticResponse: {\n                __typename: 'Mutation',\n                updateInstrument: {\n                    __typename: 'Instrument',\n                    id,\n                    year,\n                    brand,\n                    type,\n                    price,\n                    artistId\n                }\n            }\n        })\n        props.onButtonClick()\n    }\n\n    const updateStateVariable = (variable, value) => {\n        switch (variable) {\n            case 'firstName':\n                props.updateStateVariable('firstName', value)\n                setFirstName(value)\n                break\n            case 'lastName':\n                props.updateStateVariable('lastName', value)\n                setLastName(value)\n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <Form\n            form={form}\n            name='update-artist-form'\n            layout='inline'\n            onFinish={onFinish}\n            initialValues={{\n                firstName: firstName,\n                lastName: lastName\n            }}\n            size='large'\n        >\n            <Form.Item\n                name='firstName'\n                label='First Name'\n                rules={[{ required: true, message: 'Please input your first name!' }]}\n            >\n                <Input\n                    placeholder='i.e. John'\n                    onChange={e => updateStateVariable('firstName', e.target.value)}\n                />\n            </Form.Item>\n            <Form.Item\n                name='lastName'\n                label='Last Name'\n                rules={[{ required: true, message: 'Please input your last name!' }]}\n            >\n                <Input\n                    placeholder='i.e. Smith'\n                    onChange={e => updateStateVariable('lastName', e.target.value)}\n                />\n            </Form.Item>\n            <Form.Item shouldUpdate={true}>\n                {() => (\n                    <Button\n                        type='primary'\n                        htmlType='submit'\n                        disabled={\n                            !form.isFieldsTouched(true) ||\n                            form.getFieldsError().filter(({ errors }) => errors.length).length\n                        }\n                    >\n                        Update Artist\n                    </Button>\n                )}\n            </Form.Item>\n            <Button onClick={props.onButtonClick}>Cancel</Button>\n        </Form>\n    )\n}\n\nexport default UpdateInstrument\n"]},"metadata":{},"sourceType":"module"}