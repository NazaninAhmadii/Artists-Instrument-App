{"ast":null,"code":"var _jsxFileName = \"/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/lists/Instruments.js\";\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_ARTISTSINSTRUMENTS } from '../../queries';\nimport { List } from 'antd';\nimport Instrument from '../listItems/Instrument';\n\nconst getStyles = () => ({\n  list: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n});\n\nconst Instruments = props => {\n  const styles = getStyles();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ARTISTSINSTRUMENTS, {\n    variables: {\n      artistId: props.artistId\n    }\n  });\n  if (loading) return 'Loading...';\n  if (error) return `Errror! ${error.message}`;\n  return /*#__PURE__*/React.createElement(List, {\n    grid: {\n      gutter: 20,\n      column: 1\n    },\n    style: styles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, data.getInstruments.map(({\n    id,\n    year,\n    brand,\n    type,\n    price,\n    artistId\n  }) => /*#__PURE__*/React.createElement(List.Item, {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Instrument, {\n    id: id,\n    year: year,\n    brand: brand,\n    type: type,\n    price: price,\n    artistId: artistId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Instruments;","map":{"version":3,"sources":["/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/lists/Instruments.js"],"names":["React","useQuery","GET_ARTISTSINSTRUMENTS","List","Instrument","getStyles","list","display","justifyContent","Instruments","props","styles","loading","error","data","variables","artistId","message","gutter","column","getInstruments","map","id","year","brand","type","price"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,sBAAT,QAAuC,eAAvC;AAEA,SAASC,IAAT,QAAqB,MAArB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,MAAMC,SAAS,GAAG,OAAO;AACrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,cAAc,EAAE;AAFd;AADe,CAAP,CAAlB;;AAOA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACC,sBAAD,EAAyB;AAC9Da,IAAAA,SAAS,EAAE;AAAEC,MAAAA,QAAQ,EAAEN,KAAK,CAACM;AAAlB;AADmD,GAAzB,CAAzC;AAGA,MAAIJ,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,WAAUA,KAAK,CAACI,OAAQ,EAAhC;AACX,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAZ;AAAuC,IAAA,KAAK,EAAER,MAAM,CAACL,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKQ,IAAI,CAACM,cAAL,CAAoBC,GAApB,CAAwB,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA,KAAzB;AAAgCV,IAAAA;AAAhC,GAAD,kBACrB,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAEM,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEA,EAAhB;AAAoB,IAAA,IAAI,EAAEC,IAA1B;AAAgC,IAAA,KAAK,EAAEC,KAAvC;AAA8C,IAAA,IAAI,EAAEC,IAApD;AAA0D,IAAA,KAAK,EAAEC,KAAjE;AAAwE,IAAA,QAAQ,EAAEV,QAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CADL,CADJ;AASH,CAjBD;;AAmBA,eAAeP,WAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport { GET_ARTISTSINSTRUMENTS } from '../../queries'\n\nimport { List } from 'antd'\n\nimport Instrument from '../listItems/Instrument'\n\nconst getStyles = () => ({\n    list: {\n        display: 'flex',\n        justifyContent: 'center'\n    }\n})\n\nconst Instruments = (props) => {\n    const styles = getStyles()\n\n    const { loading, error, data } = useQuery(GET_ARTISTSINSTRUMENTS, {\n        variables: { artistId: props.artistId },\n    })\n    if (loading) return 'Loading...'\n    if (error) return `Errror! ${error.message}`\n    return (\n        <List grid={{ gutter: 20, column: 1 }} style={styles.list}>\n            {data.getInstruments.map(({ id, year, brand, type, price, artistId }) => (\n                <List.Item key={id}>\n                    <Instrument id={id} year={year} brand={brand} type={type} price={price} artistId={artistId} />\n                </List.Item>\n            ))}\n        </List>\n    )\n}\n\nexport default Instruments\n"]},"metadata":{},"sourceType":"module"}