{"ast":null,"code":"var _jsxFileName = \"/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/forms/UpdateInstrument.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Form, Input, Button } from 'antd';\nimport { UPDATE_INSTRUMENT } from '../../queries';\n\nconst UpdateInstrument = props => {\n  const [id] = useState(props.id);\n  const [year, setYear] = useState(props.year);\n  const [brand, setBrand] = useState(props.brand);\n  const [type, setType] = useState(props.type);\n  const [price, setPrice] = useState(props.price);\n  const [artistId, setArtistId] = useState(props.artistId);\n  const [updateInstrument] = useMutation(UPDATE_INSTRUMENT);\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState();\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    const {\n      firstName,\n      lastName\n    } = values;\n    updateInstrument({\n      variables: {\n        id,\n        year,\n        brand,\n        type,\n        price,\n        artistId\n      },\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updateInstrument: {\n          __typename: 'Instrument',\n          id,\n          year,\n          brand,\n          type,\n          price,\n          artistId\n        }\n      }\n    });\n    props.onButtonClick();\n  };\n\n  const updateStateVariable = (variable, value) => {\n    switch (variable) {\n      case 'year':\n        props.updateStateVariable('year', value);\n        setYear(value);\n        break;\n\n      case 'brand':\n        props.updateStateVariable('brand', value);\n        setBrand(value);\n        break;\n\n      case 'type':\n        props.updateStateVariable('type', value);\n        setType(value);\n        break;\n\n      case 'price':\n        props.updateStateVariable('price', value);\n        setPrice(value);\n        break;\n\n      case 'artistId':\n        props.updateStateVariable('artistId', value);\n        setArtistId(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    name: \"update-artist-form\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    initialValues: {\n      year: year,\n      brand: brand,\n      type: type,\n      price: price,\n      artistId: artistId\n    },\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"year\",\n    label: \"year\",\n    rules: [{\n      required: true,\n      message: 'Please input year!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. 1970\",\n    onChange: e => updateStateVariable('year', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"brand\",\n    label: \"brand\",\n    rules: [{\n      required: true,\n      message: 'Please input brand!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. Yahama\",\n    onChange: e => updateStateVariable('brand', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"type\",\n    label: \"type\",\n    rules: [{\n      required: true,\n      message: 'Please input type!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. keyboard\",\n    onChange: e => updateStateVariable('brand', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"price\",\n    label: \"price\",\n    rules: [{\n      required: true,\n      message: 'Please input price!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"i.e. 2200\",\n    onChange: e => updateStateVariable('price', e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    shouldUpdate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, () => /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n      errors\n    }) => errors.length).length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, \"Update Instrument\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Cancel\"));\n};\n\nexport default UpdateInstrument;","map":{"version":3,"sources":["/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/forms/UpdateInstrument.js"],"names":["React","useEffect","useState","useMutation","Form","Input","Button","UPDATE_INSTRUMENT","UpdateInstrument","props","id","year","setYear","brand","setBrand","type","setType","price","setPrice","artistId","setArtistId","updateInstrument","form","useForm","forceUpdate","onFinish","values","firstName","lastName","variables","optimisticResponse","__typename","onButtonClick","updateStateVariable","variable","value","required","message","e","target","isFieldsTouched","getFieldsError","filter","errors","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,iBAAT,QAAkC,eAAlC;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAC9B,QAAM,CAACC,EAAD,IAAOR,QAAQ,CAACO,KAAK,CAACC,EAAP,CAArB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACO,KAAK,CAACE,IAAP,CAAhC;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACO,KAAK,CAACI,KAAP,CAAlC;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAACO,KAAK,CAACM,IAAP,CAAhC;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAACO,KAAK,CAACQ,KAAP,CAAlC;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAACO,KAAK,CAACU,QAAP,CAAxC;AACA,QAAM,CAACE,gBAAD,IAAqBlB,WAAW,CAACI,iBAAD,CAAtC;AAEA,QAAM,CAACe,IAAD,IAASlB,IAAI,CAACmB,OAAL,EAAf;AACA,QAAM,GAAGC,WAAH,IAAkBtB,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZuB,IAAAA,WAAW,CAAC,EAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACvB,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA0BF,MAAhC;AACAL,IAAAA,gBAAgB,CAAC;AACbQ,MAAAA,SAAS,EAAE;AACPnB,QAAAA,EADO;AAEPC,QAAAA,IAFO;AAGPE,QAAAA,KAHO;AAIPE,QAAAA,IAJO;AAKPE,QAAAA,KALO;AAMPE,QAAAA;AANO,OADE;AASbW,MAAAA,kBAAkB,EAAE;AAChBC,QAAAA,UAAU,EAAE,UADI;AAEhBV,QAAAA,gBAAgB,EAAE;AACdU,UAAAA,UAAU,EAAE,YADE;AAEdrB,UAAAA,EAFc;AAGdC,UAAAA,IAHc;AAIdE,UAAAA,KAJc;AAKdE,UAAAA,IALc;AAMdE,UAAAA,KANc;AAOdE,UAAAA;AAPc;AAFF;AATP,KAAD,CAAhB;AAsBAV,IAAAA,KAAK,CAACuB,aAAN;AACH,GAzBD;;AA2BA,QAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7C,YAAQD,QAAR;AACI,WAAK,MAAL;AACIzB,QAAAA,KAAK,CAACwB,mBAAN,CAA0B,MAA1B,EAAkCE,KAAlC;AACAvB,QAAAA,OAAO,CAACuB,KAAD,CAAP;AACA;;AACJ,WAAK,OAAL;AACI1B,QAAAA,KAAK,CAACwB,mBAAN,CAA0B,OAA1B,EAAmCE,KAAnC;AACArB,QAAAA,QAAQ,CAACqB,KAAD,CAAR;AACA;;AACJ,WAAK,MAAL;AACI1B,QAAAA,KAAK,CAACwB,mBAAN,CAA0B,MAA1B,EAAkCE,KAAlC;AACAnB,QAAAA,OAAO,CAACmB,KAAD,CAAP;AACA;;AACJ,WAAK,OAAL;AACI1B,QAAAA,KAAK,CAACwB,mBAAN,CAA0B,OAA1B,EAAmCE,KAAnC;AACAjB,QAAAA,QAAQ,CAACiB,KAAD,CAAR;AACA;;AACJ,WAAK,UAAL;AACI1B,QAAAA,KAAK,CAACwB,mBAAN,CAA0B,UAA1B,EAAsCE,KAAtC;AACAf,QAAAA,WAAW,CAACe,KAAD,CAAX;AACA;;AACJ;AACI;AAtBR;AAwBH,GAzBD;;AA6BA,sBACI,oBAAC,IAAD;AACI,IAAA,IAAI,EAAEb,IADV;AAEI,IAAA,IAAI,EAAC,oBAFT;AAGI,IAAA,MAAM,EAAC,QAHX;AAII,IAAA,QAAQ,EAAEG,QAJd;AAKI,IAAA,aAAa,EAAE;AACXd,MAAAA,IAAI,EAAEA,IADK;AAEXE,MAAAA,KAAK,EAAEA,KAFI;AAGXE,MAAAA,IAAI,EAAEA,IAHK;AAIXE,MAAAA,KAAK,EAAEA,KAJI;AAKXE,MAAAA,QAAQ,EAAEA;AALC,KALnB;AAYI,IAAA,IAAI,EAAC,OAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAcI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,KAAK,EAAE,CAAC;AAAEiB,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAC,WADhB;AAEI,IAAA,QAAQ,EAAEC,CAAC,IAAIL,mBAAmB,CAAC,MAAD,EAASK,CAAC,CAACC,MAAF,CAASJ,KAAlB,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAdJ,eAwBI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAC,aADhB;AAEI,IAAA,QAAQ,EAAEC,CAAC,IAAIL,mBAAmB,CAAC,OAAD,EAAUK,CAAC,CAACC,MAAF,CAASJ,KAAnB,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAxBJ,eAkCI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAC,MAFV;AAGI,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAC,eADhB;AAEI,IAAA,QAAQ,EAAEC,CAAC,IAAIL,mBAAmB,CAAC,OAAD,EAAUK,CAAC,CAACC,MAAF,CAASJ,KAAnB,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAlCJ,eA4CI,oBAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAC,OAFV;AAGI,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,KAAD;AACI,IAAA,WAAW,EAAC,WADhB;AAEI,IAAA,QAAQ,EAAEC,CAAC,IAAIL,mBAAmB,CAAC,OAAD,EAAUK,CAAC,CAACC,MAAF,CAASJ,KAAnB,CAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CA5CJ,eAuDI,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,YAAY,EAAE,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,mBACG,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,SADT;AAEI,IAAA,QAAQ,EAAC,QAFb;AAGI,IAAA,QAAQ,EACJ,CAACb,IAAI,CAACkB,eAAL,CAAqB,IAArB,CAAD,IACAlB,IAAI,CAACmB,cAAL,GAAsBC,MAAtB,CAA6B,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgBA,MAAM,CAACC,MAApD,EAA4DA,MALpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFR,CAvDJ,eAqEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEnC,KAAK,CAACuB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArEJ,CADJ;AAyEH,CAjJD;;AAmJA,eAAexB,gBAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { Form, Input, Button } from 'antd'\nimport { UPDATE_INSTRUMENT } from '../../queries'\n\nconst UpdateInstrument = props => {\n    const [id] = useState(props.id)\n    const [year, setYear] = useState(props.year)\n    const [brand, setBrand] = useState(props.brand)\n    const [type, setType] = useState(props.type)\n    const [price, setPrice] = useState(props.price)\n    const [artistId, setArtistId] = useState(props.artistId)\n    const [updateInstrument] = useMutation(UPDATE_INSTRUMENT)\n\n    const [form] = Form.useForm()\n    const [, forceUpdate] = useState()\n\n    useEffect(() => {\n        forceUpdate({})\n    }, [])\n\n    const onFinish = values => {\n        const { firstName, lastName } = values\n        updateInstrument({\n            variables: {\n                id,\n                year,\n                brand,\n                type,\n                price,\n                artistId\n            },\n            optimisticResponse: {\n                __typename: 'Mutation',\n                updateInstrument: {\n                    __typename: 'Instrument',\n                    id,\n                    year,\n                    brand,\n                    type,\n                    price,\n                    artistId\n                }\n            }\n        })\n        props.onButtonClick()\n    }\n\n    const updateStateVariable = (variable, value) => {\n        switch (variable) {\n            case 'year':\n                props.updateStateVariable('year', value)\n                setYear(value)\n                break\n            case 'brand':\n                props.updateStateVariable('brand', value)\n                setBrand(value)\n                break\n            case 'type':\n                props.updateStateVariable('type', value)\n                setType(value)\n                break\n            case 'price':\n                props.updateStateVariable('price', value)\n                setPrice(value)\n                break\n            case 'artistId':\n                props.updateStateVariable('artistId', value)\n                setArtistId(value)\n                break\n            default:\n                break\n        }\n    }\n\n\n\n    return (\n        <Form\n            form={form}\n            name='update-artist-form'\n            layout='inline'\n            onFinish={onFinish}\n            initialValues={{\n                year: year,\n                brand: brand,\n                type: type,\n                price: price,\n                artistId: artistId\n            }}\n            size='large'\n        >\n            <Form.Item\n                name='year'\n                label='year'\n                rules={[{ required: true, message: 'Please input year!' }]}\n            >\n                <Input\n                    placeholder='i.e. 1970'\n                    onChange={e => updateStateVariable('year', e.target.value)}\n                />\n            </Form.Item>\n            <Form.Item\n                name='brand'\n                label='brand'\n                rules={[{ required: true, message: 'Please input brand!' }]}\n            >\n                <Input\n                    placeholder='i.e. Yahama'\n                    onChange={e => updateStateVariable('brand', e.target.value)}\n                />\n            </Form.Item>\n            <Form.Item\n                name='type'\n                label='type'\n                rules={[{ required: true, message: 'Please input type!' }]}\n            >\n                <Input\n                    placeholder='i.e. keyboard'\n                    onChange={e => updateStateVariable('brand', e.target.value)}\n                />\n            </Form.Item>\n            <Form.Item\n                name='price'\n                label='price'\n                rules={[{ required: true, message: 'Please input price!' }]}\n            >\n                <Input\n                    placeholder='i.e. 2200'\n                    onChange={e => updateStateVariable('price', e.target.value)}\n                />\n            </Form.Item>\n\n            <Form.Item shouldUpdate={true}>\n                {() => (\n                    <Button\n                        type='primary'\n                        htmlType='submit'\n                        disabled={\n                            !form.isFieldsTouched(true) ||\n                            form.getFieldsError().filter(({ errors }) => errors.length).length\n                        }\n                    >\n                        Update Instrument\n                    </Button>\n                )}\n            </Form.Item>\n            <Button onClick={props.onButtonClick}>Cancel</Button>\n        </Form>\n    )\n}\n\nexport default UpdateInstrument\n"]},"metadata":{},"sourceType":"module"}