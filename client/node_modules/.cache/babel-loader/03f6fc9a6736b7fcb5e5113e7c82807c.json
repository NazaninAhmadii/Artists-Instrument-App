{"ast":null,"code":"var _jsxFileName = \"/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/buttons/RemoveArtist.js\";\nimport React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { filter } from 'lodash';\nimport { GET_ARTISTS, REMOVE_ARTIST, REMOVE_INSTRUMENT, GET_ARTISTSINSTRUMENTS } from '../../queries';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nconst RemoveArtist = ({\n  id,\n  firstName,\n  lastName\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ARTISTSINSTRUMENTS, {\n    variables: {\n      artistId: props.artistId\n    }\n  });\n  if (loading) return 'Loading...';\n  if (error) return `Errror! ${error.message}`;\n  const [removeArtist] = useMutation(REMOVE_ARTIST, {\n    update(proxy, {\n      data: {\n        removeArtist\n      }\n    }) {\n      const {\n        artists\n      } = proxy.readQuery({\n        query: GET_ARTISTS\n      });\n      proxy.writeQuery({\n        query: GET_ARTISTS,\n        data: {\n          artists: filter(artists, c => {\n            return c.id !== removeArtist.id;\n          })\n        }\n      });\n    }\n\n  });\n\n  const handleButtonClick = () => {\n    let result = window.confirm('Are you sure you want to delete this artist?');\n\n    if (result) {\n      removeArtist({\n        variables: {\n          id\n        },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          removeArtist: {\n            __typename: 'Artist',\n            id,\n            firstName,\n            lastName\n          }\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DeleteOutlined, {\n    key: \"delete\",\n    onClick: handleButtonClick,\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default RemoveArtist;","map":{"version":3,"sources":["/Users/nazanin/Langara-Term4/React-Native/Final Exam/artists-instruments-boilerplate-antd/client/src/components/buttons/RemoveArtist.js"],"names":["React","useMutation","filter","GET_ARTISTS","REMOVE_ARTIST","REMOVE_INSTRUMENT","GET_ARTISTSINSTRUMENTS","DeleteOutlined","RemoveArtist","id","firstName","lastName","loading","error","data","useQuery","variables","artistId","props","message","removeArtist","update","proxy","artists","readQuery","query","writeQuery","c","handleButtonClick","result","window","confirm","optimisticResponse","__typename","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,EAAsBC,aAAtB,EAAqCC,iBAArC,EAAwDC,sBAAxD,QAAsF,eAAtF;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,SAAN;AAAiBC,EAAAA;AAAjB,CAAD,KAAiC;AACpD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BC,QAAQ,CAACT,sBAAD,EAAyB;AAChEU,IAAAA,SAAS,EAAE;AAAEC,MAAAA,QAAQ,EAAEC,KAAK,CAACD;AAAlB;AADqD,GAAzB,CAAzC;AAGA,MAAIL,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,WAAUA,KAAK,CAACM,OAAQ,EAAhC;AAGX,QAAM,CAACC,YAAD,IAAiBnB,WAAW,CAACG,aAAD,EAAgB;AAChDiB,IAAAA,MAAM,CAACC,KAAD,EAAQ;AAAER,MAAAA,IAAI,EAAE;AAAEM,QAAAA;AAAF;AAAR,KAAR,EAAoC;AACxC,YAAM;AAAEG,QAAAA;AAAF,UAAcD,KAAK,CAACE,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEtB;AAAT,OAAhB,CAApB;AACAmB,MAAAA,KAAK,CAACI,UAAN,CAAiB;AACfD,QAAAA,KAAK,EAAEtB,WADQ;AAEfW,QAAAA,IAAI,EAAE;AACJS,UAAAA,OAAO,EAAErB,MAAM,CAACqB,OAAD,EAAUI,CAAC,IAAI;AAC5B,mBAAOA,CAAC,CAAClB,EAAF,KAASW,YAAY,CAACX,EAA7B;AACD,WAFc;AADX;AAFS,OAAjB;AAQD;;AAX+C,GAAhB,CAAlC;;AAaA,QAAMmB,iBAAiB,GAAG,MAAM;AAC9B,QAAIC,MAAM,GAAGC,MAAM,CAACC,OAAP,CAAe,8CAAf,CAAb;;AACA,QAAIF,MAAJ,EAAY;AACVT,MAAAA,YAAY,CAAC;AACXJ,QAAAA,SAAS,EAAE;AACTP,UAAAA;AADS,SADA;AAIXuB,QAAAA,kBAAkB,EAAE;AAClBC,UAAAA,UAAU,EAAE,UADM;AAElBb,UAAAA,YAAY,EAAE;AACZa,YAAAA,UAAU,EAAE,QADA;AAEZxB,YAAAA,EAFY;AAGZC,YAAAA,SAHY;AAIZC,YAAAA;AAJY;AAFI;AAJT,OAAD,CAAZ;AAcD;AACF,GAlBD;;AAmBA,sBACE,oBAAC,cAAD;AACE,IAAA,GAAG,EAAC,QADN;AAEE,IAAA,OAAO,EAAEiB,iBAFX;AAGE,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAOD,CA/CD;;AAiDA,eAAe1B,YAAf","sourcesContent":["import React from 'react'\nimport { useMutation } from '@apollo/react-hooks'\nimport { filter } from 'lodash'\nimport { GET_ARTISTS, REMOVE_ARTIST, REMOVE_INSTRUMENT, GET_ARTISTSINSTRUMENTS } from '../../queries'\nimport { DeleteOutlined } from '@ant-design/icons'\n\nconst RemoveArtist = ({ id, firstName, lastName }) => {\n  const { loading, error, data } = useQuery(GET_ARTISTSINSTRUMENTS, {\n    variables: { artistId: props.artistId },\n  })\n  if (loading) return 'Loading...'\n  if (error) return `Errror! ${error.message}`\n\n\n  const [removeArtist] = useMutation(REMOVE_ARTIST, {\n    update(proxy, { data: { removeArtist } }) {\n      const { artists } = proxy.readQuery({ query: GET_ARTISTS })\n      proxy.writeQuery({\n        query: GET_ARTISTS,\n        data: {\n          artists: filter(artists, c => {\n            return c.id !== removeArtist.id\n          })\n        }\n      })\n    }\n  })\n  const handleButtonClick = () => {\n    let result = window.confirm('Are you sure you want to delete this artist?')\n    if (result) {\n      removeArtist({\n        variables: {\n          id\n        },\n        optimisticResponse: {\n          __typename: 'Mutation',\n          removeArtist: {\n            __typename: 'Artist',\n            id,\n            firstName,\n            lastName\n          }\n        }\n      })\n    }\n  }\n  return (\n    <DeleteOutlined\n      key='delete'\n      onClick={handleButtonClick}\n      style={{ color: 'red' }}\n    />\n  )\n}\n\nexport default RemoveArtist\n"]},"metadata":{},"sourceType":"module"}